# +--------------------------------------------------------------------------+
# |                   Automated Scientific Discovery (ASD)                   |
# +--------------------------------------------------------------------------+
AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation Template to Create IAM Role, Security Group, Launch Template and Auto Scaling Group'
Parameters:
  InstanceType:
    Description: 'Type of EC2 instance to be used'
    Type: 'String'
    Default: 't3.xlarge'
    AllowedValues: 
      - 't3.xlarge'
      - 'm5a.xlarge'
      - 'm5a.2xlarge'
      - 'm5a.4xlarge'
      - 'c6a.2xlarge'
      - 'c6a.4xlarge'
      - 'c6a.8xlarge'
      - 'c6a.12xlarge'
      - 'c6a.16xlarge'
    ConstraintDescription: 'Must be a valid EC2 instance type.'
  VpcId:
    Type: List<AWS::EC2::VPC::Id>
    Description: VPC ID where the EC2 instance(s) will be deployed. !!! Subnet resources need to have access to the Internet !!!
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Subnet Id where the EC2 instance(s) is/are going to be deployed to'
  EbsVolumeSize:
    Description: 'Size for the EC2 EBS volume(s)'
    Type: 'Number'
    Default: 150
  AutoScalingGroupMaxSize:
    Description: 'Maximum Size, in units, for the EC2 Ray nodes Auto Scaling Group'
    Type: 'String'
    Default: '3'
  Ec2AmiId:
    Description: 'EC2 AMI Id to be used in the Auto Scaling Group'
    Default: 'ami-0a3ea90a796298456'
    Type: 'String' 
  AsdDeploymentCount:
    Description: ASD Deployment number
    Type: String
    Default: 'none'
  AsdContainerUuid:
    Description: UUID of the ASD Container
    Type: String
    Default: 'none'      
Resources:
  LightsailFullAccessRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'ec2.amazonaws.com'
            Action: 'sts:AssumeRole'
      Path: '/'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy      
      Policies:
        - PolicyName:
            Fn::Sub: ${AWS::StackName}-LightsailFullAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action: 'lightsail:*'
                Resource: '*'
        - PolicyName:
            Fn::Sub: ${AWS::StackName}-Read-Secret
          PolicyDocument:
            Version: 2012-10-17
            Statement:
            - Effect: Allow
              Action:
              - kms:Encrypt
              - kms:Decrypt
              Resource:
                - !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key*"
            - Effect: Allow
              Action:
              - secretsmanager:GetResourcePolicy
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
              - secretsmanager:ListSecretVersionIds
              Resource:
                - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*"
  InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: '/'
      Roles:
        - !Ref LightsailFullAccessRole
  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Join [ '', !Ref VpcId ]
      GroupDescription: 'Security group with no incoming traffic and all outbound traffic allowed'
      SecurityGroupIngress: []
      SecurityGroupEgress:
        - CidrIp: '0.0.0.0/0'
          IpProtocol: '-1'
  AsdNodesLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties: 
      LaunchTemplateData:
        BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            DeleteOnTermination: true
            Encrypted: true
            Iops: 3000
            Throughput: 125
            VolumeSize: !Ref EbsVolumeSize
            VolumeType: gp3
        ImageId: !Ref Ec2AmiId
        InstanceType: !Ref InstanceType
        IamInstanceProfile:
          Arn: !GetAtt
            - InstanceProfile
            - Arn
        SecurityGroupIds:
          - !Ref SecurityGroup
      LaunchTemplateName: !Sub 'asd-nodes-${AsdDeploymentCount}'
      VersionDescription: Serves as Ray processing node for the ASD application or runs the entire app itself
  AutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      AutoScalingGroupName: !Sub 'asd-nodes-${AsdDeploymentCount}'
      VPCZoneIdentifier: !Ref SubnetIds
      LaunchTemplate:
        LaunchTemplateId: !Ref AsdNodesLaunchTemplate
        Version: !GetAtt AsdNodesLaunchTemplate.LatestVersionNumber      
      MinSize: '0'
      MaxSize: !Ref AutoScalingGroupMaxSize
      DesiredCapacity: '0'
      Tags:
        - Key: CreatedBy
          Value: ASD
          PropagateAtLaunch: true
        - Key: AsdContainerUuid
          Value: !Ref AsdContainerUuid 
          PropagateAtLaunch: true
        - Key: Name
          Value: !Sub 'ASD-Nodes-AutoScaling-${AsdDeploymentCount}'
          PropagateAtLaunch: true                       
  AsdAutoScalingGroupInPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroup
      PolicyName: !Sub 'AsdAutoScalingGroupIn-${AsdDeploymentCount}'
      PolicyType: StepScaling
      AdjustmentType: ChangeInCapacity
      MetricAggregationType: Average
      StepAdjustments:
        - MetricIntervalUpperBound: 0.0
          ScalingAdjustment: -1
  AsdAutoScalingGroupInAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub 'AsdAutoScalingGroupIn-${AsdDeploymentCount}'
      Namespace: AWS/EC2
      MetricName: CPUUtilization
      Statistic: Average
      Period: 60
      EvaluationPeriods: 15
      DatapointsToAlarm: 15
      Threshold: 40.0
      ComparisonOperator: LessThanOrEqualToThreshold
      TreatMissingData: missing
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref AutoScalingGroup
      AlarmActions:
        - Ref: AsdAutoScalingGroupInPolicy
  AsdAutoScalingGroupOutPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroup
      PolicyName: !Sub 'AsdAutoScalingGroupOut-${AsdDeploymentCount}'
      PolicyType: StepScaling
      AdjustmentType: ChangeInCapacity
      MetricAggregationType: Average
      StepAdjustments:
        - MetricIntervalLowerBound: 0.0
          ScalingAdjustment: 1
  AsdAutoScalingGroupOutAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub 'AsdAutoScalingGroupOut-${AsdDeploymentCount}'
      Namespace: AWS/EC2
      MetricName: CPUUtilization
      Statistic: Average
      Period: 60
      EvaluationPeriods: 3
      DatapointsToAlarm: 3
      Threshold: 80.0
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: missing
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref AutoScalingGroup
      AlarmActions:
        - Ref: AsdAutoScalingGroupOutPolicy
Outputs:
  AutoScalingGroup:
    Description: 'Auto Scaling Group Name'
    Value: !Ref AutoScalingGroup